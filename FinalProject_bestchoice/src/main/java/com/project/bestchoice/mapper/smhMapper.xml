<?xml version="1.0" encoding="UTF-8"?>

<!-- ====  mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 루트 엘리먼트 & 네임 스페이스 설정 ( 프로젝트 전체 내에서 유일해야 한다.) -->
<!-- namespace 는 보통 파일명 ( 프로젝트 내에서 고유해야 한다. ) -->
<mapper namespace="smhMapper">

	<!-- 회원가입   -->
	<insert id="memberInsert" parameterType="com.project.smh.SmhMemberVO">
	insert into tbl_here_member(member_idx, email, pwd, name, nickname, hp1, hp2, hp3, gender, birthday, registerday, lastLoginDate, lastpwdChangeDate)
	values(seq_here_member.nextval, #{email}, #{pwd}, #{name}, #{nickname}, #{hp1}, #{hp2}, #{hp3},#{gender}, #{birthday}, sysdate, sysdate, sysdate)
	</insert>
	<!-- 카카오 회원가입 -->
	<insert id="memberInsertForKakao" parameterType="com.project.smh.SmhMemberVO">
	insert into tbl_here_member(member_idx, email, pwd, name, registerday, lastLoginDate, lastpwdChangeDate)
	values(seq_here_member.nextval, #{email}, #{pwd}, #{name}, sysdate, sysdate, sysdate)
	</insert>
	
	
	
	
	<!--로그인처리   -->
	<select id="getLoginMember" resultType="com.project.smh.SmhMemberVO" parameterType="HashMap">

		     select member_idx,name,email,nickname, hp1, hp2, hp3,mstatus
			  , trunc( months_between(sysdate, lastLoginDate) ) AS lastlogindategap 
              , trunc( months_between(sysdate, lastpwdChangeDate) ) AS lastpwdChangeDate 
			 from tbl_here_member 
			 where mstatus = 1 and 
		     email = #{email} and
		     pwd = #{pwd}
		     	
	</select>
	
	<!--카카오 로그인처리   -->
	<select id="getKakaoLoginMember" resultType="com.project.smh.SmhMemberVO" parameterType="HashMap">

		     select member_idx,name,email,mstatus
			  , trunc( months_between(sysdate, lastLoginDate) ) AS lastlogindategap 
              , trunc( months_between(sysdate, lastpwdChangeDate) ) AS lastpwdChangeDate 
			 from tbl_here_member 
			 where mstatus = 1 and 
		     email = #{email} and
		     pwd = #{pwd}
		     		
	</select>
	
	
	
	<!-- 마지막으로 로그인한 날짜 변경하기  -->
	<update id="setLastLoginDate" parameterType="HashMap">
	 update tbl_here_member set lastLoginDate = sysdate
	 where email = #{email}
	</update>

	<!-- 이메일 중복체크    -->
	<select id="userEmailCheck" resultType="int" parameterType="String">
	select count(*) from tbl_here_member where email = #{email}
	</select>

	<!-- 회원가입시 user의 회원번호 알아오기  -->
   <select id="selectmemberidx" resultType="String" parameterType="String">
    select member_idx from tbl_here_member where email = #{useremail}
   </select>
   
   <!-- 회원가입시 포인트 1000점 업데이트  -->
   <insert id="memberPointInsert"  parameterType="HashMap">
      insert into tbl_here_mpoint(fk_member_idx, mpointCash)
      values(#{memberIdx}, #{memberPoint})
   </insert>
   
   <!-- 회원정보 업데이트  -->
   <update id="InfoUpdate" parameterType="com.project.smh.SmhMemberVO"  >
    update tbl_here_member set nickname = #{nickname}
                      , name = #{name}
                      , hp1 = #{hp1}
                      , hp2 = #{hp2}
                      , hp3 = #{hp3}
	where email = #{email}
   </update>
   

	<!--비밀번호 찾기에서 회원이 존재하는지 확인  -->
	<select id="isUserExist" parameterType="HashMap"  resultType="String"  >
	select * from tbl_here_member where email = #{email}
	</select>
	
	<!-- 회원 포인트 삭제  -->
	<delete id="pointDelete" >
	delete from tbl_here_mpoint where fk_member_idx = #{member_idx}
	</delete>
	
	<!--회원 탈퇴 (mstatus => 0 변경 )  -->
	<update id="memberUpdate" parameterType="int">
	update tbl_here_member set mstatus = 0 
	where member_idx = #{member_idx}
	</update>
	
	<!-- 임시발송된 비밀번호 DB에 업데이트  -->
	<update id="pwdUpdate" parameterType="HashMap">
	update tbl_here_member set pwd = #{pwd}
	where email = #{email}
	</update>
	
	<!-- 회원의 포인트 조회해 오기   -->
	<select id="getUserPoint" parameterType="HashMap" resultType="String" >
	select mpointcash
	from   tbl_here_mpoint  
	where fk_member_idx = #{memberidx}
	</select>
	
	
	<!-- 회원의 포인트 조회해 오기   -->
	<resultMap type="HashMap" id="getUserCouponMap">
	<result property="coupon_name" 		  column="coupon_name" 				javaType="String" />
	<result property="coupon_discountMon" column="coupon_discountMon" 		javaType="String" />
	<result property="coupon_startday" 	  column="coupon_startday" 			javaType="String" />
	<result property="coupon_endday" 	  column="coupon_endday" 			javaType="String" />
	<result property="coupon_useday" 	  column="coupon_useday" 			javaType="String" />
	<result property="fk_idx" 			  column="fk_idx" 			javaType="String" />
	</resultMap>
	<select id="getUserCoupon" parameterType="HashMap" resultMap="getUserCouponMap">
	SELECT b.coupon_name, b.coupon_discountMon, b.coupon_startday, b.coupon_endday, b.coupon_useday 
	from tbl_here_member_coupon a
	join tbl_here_admin_coupon b
	on a.fk_coupon_code = b.coupon_code
	where a.fk_idx = #{memberidx}
	</select>
	
	<!-- 회원의 예약내역 조회해오기   -->
	<resultMap type="HashMap" id="reservationMap">	
	<result property="hotel_Name" 	column="hotel_Name" 		javaType="String" />
	<result property="hotel_Addr1" 	column="hotel_Addr1" 		javaType="String" />
	<result property="hotel_Addr2" 	column="hotel_Addr2" 		javaType="String" />
	<result property="hotel_Addr3" 	column="hotel_Addr3" 		javaType="String" />
	<result property="hotel_Post" 	column="hotel_Post" 		javaType="String" />
	<result property="hotel_Phone" 	column="hotel_Phone" 		javaType="String" />
	<result property="hotelImage_FileName" 	column="hotelImage_FileName" 		javaType="String" />
	</resultMap>
	<select id="reservationList" parameterType="HashMap" resultMap="reservationMap">
	select  a.hotel_Name, a.hotel_Addr1, a.hotel_Addr2,a.hotel_Addr3,a.hotel_Post, a.hotel_Phone, b.hotelImage_FileName
	from tbl_here_hotelInfo a join TBL_HERE_RESERVATION c 
	on a.hotel_idx     =  c.fk_hotel_idx join tbl_here_hotelImage b
	on c.fk_hotel_idx  =  b.fk_hotel_idx join tbl_here_member 
	on c.fk_member_idx = member_idx
	where member_idx = #{member_idx}
	</select>
		
		
		
		
</mapper>

